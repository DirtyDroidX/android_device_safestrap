#!/system/bin/sh
# By: Hashcode
# Last Editted: 10/24/2012
PATH=/system/xbin:/system/bin:/sbin

# SS3 Setup
IMG_FSTYPE=ext3
SYS_MNT=/s2
SS_MNT=/ss
SS_PART=emstorage
SS_DIR=$SS_MNT/safestrap
SS_FSTYPE=vfat
RECOVERY_DIR=/system/etc/safestrap
BLOCK_DIR=/dev/block
HIJACK_BIN=logwrapper
RECOVERY_TRIGGER_PATH=/data/.recovery_mode

ALT_SYSTEM_MODE="0"
BOOTMODE=$(getprop ro.bootmode)
CHARGER_MODE=$(cat /sys/class/power_supply/ac/online)
CHECK_BOOTMODE="bp-tools"

if [ -d '/dev/block/platform/omap/omap_hsmmc.1/by-name' ]; then
	BLOCKNAME_DIR=/dev/block/platform/omap/omap_hsmmc.1/by-name
else
	BLOCKNAME_DIR=/dev/block
fi

BLOCKNAME_DIR=/dev/block

# Function for search/replace partition names with symlink generics
fixReference()
{
	FIXBLK=$(/sbin/bbx cat /proc/partitions | /sbin/bbx grep ${2} | /sbin/bbx cut -c26-35 | /sbin/bbx sed s/\t*//)
	if [ "$FIXBLK" != "" ]; then
		/sbin/bbx sed s/$FIXBLK/${3}/ < ${1} > ${1}.bak
		RESULT=`echo $?`
		if [ $RESULT -eq 0 ]; then
			if [ -f ${1}.bak ]; then
				/sbin/bbx mv ${1}.bak ${1}
			fi
		else
			/sbin/rm ${1}.bak
		fi
	fi
}


if [ "$2" = "userdata" ]; then
	# remount root as rw
	mount -o remount,rw rootfs

	# need busybox
	cp $RECOVERY_DIR/bbx /sbin/bbx
	chmod 755 /sbin/bbx
	chown 0.2000 /sbin/bbx

	POWERUP_REASON=$(/sbin/bbx cat /proc/bootinfo | /sbin/bbx grep POWERUPREASON | /sbin/bbx cut -c 19-)

	if [ "$CHARGER_MODE" != "1" ] || [ "$POWERUP_REASON" != "00000100" ]; then
		# create safestrap mount point
		/sbin/bbx mkdir $SS_MNT
		/sbin/bbx chown 0.2000 $SS_MNT
		/sbin/bbx chmod 777 $SS_MNT
		/sbin/bbx mkdir $SYS_MNT
		/sbin/bbx chown 0.2000 $SYS_MNT
		/sbin/bbx chmod 777 $SYS_MNT

		# mount safestrap partition
		/sbin/bbx mount -t $SS_FSTYPE $BLOCKNAME_DIR/$SS_PART $SS_MNT

		if [ ! -d "$SS_DIR" ]; then
			/sbin/bbx mkdir -p $SS_DIR
		fi
		if [ ! -f "$SS_DIR/active_slot" ]; then
			/sbin/bbx echo "stock" > $SS_DIR/active_slot
		fi
		SLOT_LOC=$(/sbin/bbx cat $SS_DIR/active_slot)

		# check the boot mode from the recovery file
		if [ -f $SS_DIR/recovery_mode ]; then
			CHECK_BOOTMODE=$(/sbin/bbx cat $SS_DIR/recovery_mode)
		fi
		# boot modes= ap-bp-bypass, bp-tools
		if [ "$BOOTMODE" = "$CHECK_BOOTMODE" ]; then
			ALT_SYSTEM_MODE="2"
		else
			if [ -f "$SS_DIR/$SLOT_LOC/system.img" ] && [ -f "$SS_DIR/$SLOT_LOC/userdata.img" ] && [ -f "$SS_DIR/$SLOT_LOC/cache.img" ]; then
				ALT_SYSTEM_MODE="1"
			fi
		fi

		# check for .recovery_mode on current /data mount
		if [ "$ALT_SYSTEM_MODE" = "1" ]; then
			# setup loopback
			/sbin/bbx losetup $BLOCK_DIR/loop6 $SS_DIR/$SLOT_LOC/userdata.img
			/sbin/bbx mount -t $IMG_FSTYPE $BLOCK_DIR/loop6 /data
			if [ -f $RECOVERY_TRIGGER_PATH ]; then
				/sbin/bbx rm $RECOVERY_TRIGGER_PATH
				ALT_SYSTEM_MODE="2"
			fi
			/sbin/bbx umount /data
			/sbin/bbx losetup -d $BLOCK_DIR/loop6
		else
			/sbin/bbx mount -t $IMG_FSTYPE $BLOCK_DIR/userdata /data
			if [ -f $RECOVERY_TRIGGER_PATH ]; then
				/sbin/bbx rm $RECOVERY_TRIGGER_PATH
				ALT_SYSTEM_MODE="2"
			fi
			/sbin/bbx umount /data
		fi

		if [ "$ALT_SYSTEM_MODE" = "2" ] || [ $($RECOVERY_DIR/safestrapmenu $ALT_SYSTEM_MODE > /dev/null 2>&1;echo $?) -eq 0 ]; then
			# filesystem cleanup
			/sbin/bbx rm /etc
			/sbin/bbx mkdir /etc
			/sbin/bbx chmod 755 /etc
			/sbin/bbx rm /sdcard
			/sbin/bbx rm /sdcard-ext
			/sbin/bbx rm -rf /mnt
			/sbin/bbx rm /vendor
			/sbin/bbx rm /d
			/sbin/bbx rm /tmp
			/sbin/bbx mkdir /tmp

			# move apps into /tmp for execution later
			/sbin/bbx unzip -o $RECOVERY_DIR/2nd-init.zip -d /sbin
			/sbin/bbx chmod 750 /sbin/*

			# move bins out of the way
			/sbin/bbx mv /sbin/adbd /sbin/adbd.old
			/sbin/bbx mv /init /init.old

			# extract recovery ramdisk
			/sbin/bbx cd /
			/sbin/bbx unzip -o $RECOVERY_DIR/recovery.zip -d /
			/sbin/bbx cd /sbin
			/sbin/bbx ln -s /sbin/busybox /sbin/sh
			/sbin/bbx chmod -R 755 /res/*
			/sbin/bbx chmod 644 /default.prop
			/sbin/bbx chmod -R 755 /charger/*
			/sbin/bbx chmod -R 755 /etc/*
			/sbin/bbx chmod 755 /init
			/sbin/bbx chmod 755 /*.rc
			/sbin/bbx chmod 755 /*.sh
			/sbin/bbx chmod -R 755 /sbin/*

			# setup translate table
			/sbin/bbx cat /proc/partitions | /sbin/bbx grep system | /sbin/bbx cut -c26- | /sbin/bbx sed 's/\t/=/g' > $SS_DIR/translate
			/sbin/bbx cat /proc/partitions | /sbin/bbx grep userdata | /sbin/bbx cut -c26- | /sbin/bbx sed 's/\t/=/g' >> $SS_DIR/translate
			/sbin/bbx cat /proc/partitions | /sbin/bbx grep cache | /sbin/bbx cut -c26- | /sbin/bbx sed 's/\t/=/g' >> $SS_DIR/translate
			/sbin/bbx cat /proc/partitions | /sbin/bbx grep pds | /sbin/bbx cut -c26- | /sbin/bbx sed 's/\t/=/g' >> $SS_DIR/translate
			/sbin/bbx cat /proc/partitions | /sbin/bbx grep preinstall | /sbin/bbx cut -c26-36 | /sbin/bbx sed 's/\t/=system/g' >> $SS_DIR/translate
			/sbin/bbx cat /proc/partitions | /sbin/bbx grep webtop | /sbin/bbx cut -c26-36 | /sbin/bbx sed 's/\t/=system/g' >> $SS_DIR/translate

			# unmount partitions
			/sbin/bbx umount /system
			/sbin/bbx umount $SS_MNT

			/sbin/hijack.killall

			/sbin/taskset -p -c 0 1
			/sbin/bbx sync
			/sbin/taskset -c 0 /sbin/2nd-init
			exit
		fi

		# check for active virtual system
		if [ "$ALT_SYSTEM_MODE" = "1" ]; then
			/sbin/bbx unzip -o $RECOVERY_DIR/2nd-init.zip -d /sbin
			/sbin/bbx chmod 750 /sbin/*

			# setup loopback
			/sbin/bbx losetup $BLOCK_DIR/loop7 $SS_DIR/$SLOT_LOC/system.img
			/sbin/bbx mount -t $IMG_FSTYPE $BLOCK_DIR/loop7 $SYS_MNT

			# check for hijacks, and remove
			if [ -f "$SYS_MNT/bin/$HIJACK_BIN.orig" ]; then
				/sbin/bbx rm $SYS_MNT/bin/$HIJACK_BIN
				/sbin/bbx mv $SYS_MNT/bin/$HIJACK_BIN.orig $SYS_MNT/bin/$HIJACK_BIN
				/sbin/bbx chmod 755 $SYS_MNT/bin/$HIJACK_BIN
				/sbin/bbx chown 0.2000 $SYS_MNT/bin/$HIJACK_BIN
			fi
			if [ -f "$SYS_MNT/bin/$HIJACK_BIN.bin" ]; then
				/sbin/bbx rm $SYS_MNT/bin/$HIJACK_BIN
				/sbin/bbx mv $SYS_MNT/bin/$HIJACK_BIN.bin $SYS_MNT/bin/$HIJACK_BIN
				/sbin/bbx chmod 755 $SYS_MNT/bin/$HIJACK_BIN
				/sbin/bbx chown 0.2000 $SYS_MNT/bin/$HIJACK_BIN
			fi

			# check for kexec files
			if [ -d "$SYS_MNT/etc/kexec" ]; then
				/sbin/bbx cp $SYS_MNT/etc/kexec/* /

				# unmount new /system
				/sbin/bbx umount $SYS_MNT
				/sbin/bbx losetup -d $BLOCK_DIR/loop7
				/sbin/bbx umount $SS_MNT

				/sbin/hijack.killall

				/sbin/bbx cd /
				/sbin/bbx chmod 755 /kexec
				/sbin/bbx chown 0.2000 /kexec
				/sbin/bbx insmod /uart.ko
				/sbin/bbx insmod /arm_kexec.ko
				/sbin/bbx insmod /kexec.ko
				/kexec -l /kernel --devtree=/devtree --ramdisk=/ramdisk.img
				/sbin/bbx sleep 1
				/kexec -e
				exit
			fi

			# if there's a ramdisk then extract it
			if [ -d "$SYS_MNT/etc/rootfs" ]; then
				if [ -f "$SYS_MNT/etc/rootfs/sbin/adbd" ]; then
					/sbin/bbx mv /sbin/adbd /sbin/adbd.old
				fi
				if [ -f "$SYS_MNT/etc/rootfs/init" ]; then
					/sbin/bbx mv /init /init.old
				fi
				/sbin/bbx cp -R $SYS_MNT/etc/rootfs/* /
			fi

			# fix "old" style mounts
			for f in /init.*.rc
			do
				fixReference "$f" system system
				fixReference "$f" userdata userdata
				fixReference "$f" cache cache
				fixReference "$f" pds pds
				# include translations for older SS2 style ROMs (preinstall / webtop used as system)
				fixReference "$f" preinstall system
				fixReference "$f" webtop system
			done

			# reset permissions
			/sbin/bbx chmod -R 750 /sbin/*
			/sbin/bbx chmod 755 /init
			/sbin/bbx chmod 755 /charger
			/sbin/bbx chmod 644 /default.prop
			/sbin/bbx chmod 755 /*.rc
			/sbin/bbx chmod 755 /*.sh

			# unmount new /system
			/sbin/bbx umount $SYS_MNT
			/sbin/bbx losetup -d $BLOCK_DIR/loop7
			/sbin/bbx umount $SS_MNT

			# unmount old /system
			/sbin/bbx umount -l /system

			/sbin/hijack.killall

			# mount point / symlink cleanup
			/sbin/bbx rm /sdcard
			/sbin/bbx rm /sdcard-ext

			/sbin/taskset -p -c 0 1
			/sbin/bbx sync
			/sbin/taskset -c 0 /sbin/2nd-init
			exit
		fi

		# unmount safestrap partition
		/sbin/bbx umount $SS_MNT
	fi
fi

/system/bin/$HIJACK_BIN.bin "$@"

